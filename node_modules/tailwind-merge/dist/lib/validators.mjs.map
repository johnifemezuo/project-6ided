{"version":3,"file":"validators.mjs","sources":["../../src/lib/validators.ts"],"sourcesContent":["const arbitraryValueRegex = /^\\[(.+)\\]$/\nconst fractionRegex = /^\\d+\\/\\d+$/\nconst stringLengths = new Set(['px', 'full', 'screen'])\nconst tshirtUnitRegex = /^(\\d+)?(xs|sm|md|lg|xl)$/\nconst lengthUnitRegex = /\\d+(%|px|em|rem|vh|vw|pt|pc|in|cm|mm|cap|ch|ex|lh|rlh|vi|vb|vmin|vmax)/\n// Shadow always begins with x and y offset separated by underscore\nconst shadowRegex = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/\n\nexport function isLength(classPart: string) {\n    return (\n        !Number.isNaN(Number(classPart)) ||\n        stringLengths.has(classPart) ||\n        fractionRegex.test(classPart) ||\n        isArbitraryLength(classPart)\n    )\n}\n\nexport function isArbitraryLength(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    if (arbitraryValue) {\n        return arbitraryValue.startsWith('length:') || lengthUnitRegex.test(arbitraryValue)\n    }\n\n    return false\n}\n\nexport function isArbitrarySize(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue ? arbitraryValue.startsWith('size:') : false\n}\n\nexport function isArbitraryPosition(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue ? arbitraryValue.startsWith('position:') : false\n}\n\nexport function isArbitraryUrl(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue\n        ? arbitraryValue.startsWith('url(') || arbitraryValue.startsWith('url:')\n        : false\n}\n\nexport function isArbitraryWeight(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue\n        ? !Number.isNaN(Number(arbitraryValue)) || arbitraryValue.startsWith('number:')\n        : false\n}\n\nexport function isInteger(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    if (arbitraryValue) {\n        return Number.isInteger(Number(arbitraryValue))\n    }\n\n    return Number.isInteger(Number(classPart))\n}\n\nexport function isArbitraryValue(classPart: string) {\n    return arbitraryValueRegex.test(classPart)\n}\n\nexport function isAny() {\n    return true\n}\n\nexport function isTshirtSize(classPart: string) {\n    return tshirtUnitRegex.test(classPart)\n}\n\nexport function isArbitraryShadow(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    if (arbitraryValue) {\n        return shadowRegex.test(arbitraryValue)\n    }\n\n    return false\n}\n"],"names":["arbitraryValueRegex","fractionRegex","stringLengths","Set","tshirtUnitRegex","lengthUnitRegex","shadowRegex","isLength","classPart","Number","isNaN","has","test","isArbitraryLength","arbitraryValue","exec","startsWith","isArbitrarySize","isArbitraryPosition","isArbitraryUrl","isArbitraryWeight","isInteger","isArbitraryValue","isAny","isTshirtSize","isArbitraryShadow"],"mappings":"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"}